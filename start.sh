#!/bin/bash

# Цвета для вывода
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}=== Запуск магазина 'Конфетти' ===${NC}"

# Остановка всех процессов node.js
echo -e "Остановка всех запущенных процессов node.js..."
killall node 2>/dev/null
sleep 1

# Проверка занятости порта 5001
if lsof -i:5001 > /dev/null 2>&1; then
  echo -e "${RED}Порт 5001 всё ещё занят другим процессом.${NC}"
  echo -e "Попытка принудительного освобождения порта..."
  lsof -ti:5001 | xargs kill -9 2>/dev/null
  sleep 1
fi

# Проверка занятости порта 3000
if lsof -i:3000 > /dev/null 2>&1; then
  echo -e "${RED}Порт 3000 всё ещё занят другим процессом.${NC}"
  echo -e "Попытка принудительного освобождения порта..."
  lsof -ti:3000 | xargs kill -9 2>/dev/null
  sleep 1
fi

# Запуск сервера с фиксированным портом в фоне
echo -e "${GREEN}Запуск сервера на порту 5001...${NC}"

# Сервер теперь:
# 1. Автоматически исправляет двойные пути API (/api/api/* -> /api/*)
# 2. Работает на фиксированном порту 5001
# 3. Клиентская часть может автоматически обнаруживать сервер на разных портах
echo -e "${YELLOW}Примечание: Сервер автоматически исправляет двойные пути API (/api/api/* -> /api/*)${NC}"

NODE_OPTIONS=--no-warnings node server/fixed-port.js > server.log 2>&1 &
SERVER_PID=$!

# Проверка, запустился ли сервер успешно
sleep 2
if ! kill -0 $SERVER_PID 2>/dev/null; then
  echo -e "${RED}Не удалось запустить сервер.${NC}"
  echo -e "Проверьте логи в файле server.log"
  exit 1
fi

# Проверка, работает ли сервер на порту 5001
if ! lsof -i:5001 > /dev/null 2>&1; then
  echo -e "${RED}Сервер не работает на порту 5001.${NC}"
  exit 1
fi

# Запуск клиента
echo -e "${GREEN}Запуск клиентского приложения...${NC}"
cd client && npm start

# Если клиент был закрыт, мы также останавливаем сервер
echo -e "${YELLOW}Остановка сервера...${NC}"
kill $SERVER_PID 2>/dev/null

echo -e "${GREEN}Приложение остановлено.${NC}" 