{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/\\u0434\\u0438\\u043F\\u043B\\u043E\\u043C/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Проверка наличия токена при загрузке приложения\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      console.log('Авторизация из localStorage: токен найден');\n      setUser(JSON.parse(userData));\n      // Устанавливаем заголовок авторизации для всех запросов axios\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      console.log('Заголовок Authorization установлен:', `Bearer ${token}`);\n    } else {\n      console.log('Авторизация из localStorage: токен не найден');\n    }\n    setLoading(false);\n  }, []);\n\n  // Функция для входа в систему\n  const login = async (email, password) => {\n    try {\n      console.log('Отправка запроса на авторизацию:', '/api/login');\n      console.log('Данные для входа:', {\n        email\n      });\n      const {\n        data\n      } = await axios.post('/api/login', {\n        email,\n        password\n      });\n      console.log('Успешная авторизация, получен токен');\n      setUser(data);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data));\n      // Устанавливаем заголовок авторизации для всех запросов axios\n      axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n      console.log('Заголовок Authorization установлен:', `Bearer ${data.token}`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Ошибка авторизации:', error);\n\n      // Более подробное логирование ошибок\n      if (error.response) {\n        console.error('Ответ сервера:', error.response.status, error.response.data);\n      } else if (error.request) {\n        console.error('Запрос без ответа:', error.request);\n      } else {\n        console.error('Ошибка настройки запроса:', error.message);\n      }\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Ошибка входа. Проверьте соединение с сервером.'\n      };\n    }\n  };\n\n  // Функция для регистрации\n  const register = async (name, email, password) => {\n    try {\n      console.log('Отправка запроса на регистрацию:', '/api/register');\n      console.log('Данные для регистрации:', {\n        name,\n        email\n      });\n      const {\n        data\n      } = await axios.post('/api/register', {\n        name,\n        email,\n        password\n      });\n      console.log('Успешная регистрация, получен токен');\n      setUser(data);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n      console.log('Заголовок Authorization установлен:', `Bearer ${data.token}`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Ошибка регистрации:', error);\n\n      // Более подробное логирование ошибок\n      if (error.response) {\n        console.error('Ответ сервера:', error.response.status, error.response.data);\n      } else if (error.request) {\n        console.error('Запрос без ответа:', error.request);\n      } else {\n        console.error('Ошибка настройки запроса:', error.message);\n      }\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Ошибка регистрации. Проверьте соединение с сервером.'\n      };\n    }\n  };\n\n  // Функция для выхода из системы\n  const logout = () => {\n    console.log('Выход из системы, удаление токена');\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n    console.log('Заголовок Authorization удален');\n  };\n\n  // Проверка, является ли пользователь администратором\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout,\n      isAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","userData","console","log","JSON","parse","defaults","headers","common","login","email","password","data","post","setItem","stringify","success","error","_error$response","_error$response$data","response","status","request","message","register","name","_error$response2","_error$response2$data","logout","removeItem","isAdmin","role","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/диплом/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Проверка наличия токена при загрузке приложения\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      console.log('Авторизация из localStorage: токен найден');\n      setUser(JSON.parse(userData));\n      // Устанавливаем заголовок авторизации для всех запросов axios\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      console.log('Заголовок Authorization установлен:', `Bearer ${token}`);\n    } else {\n      console.log('Авторизация из localStorage: токен не найден');\n    }\n    \n    setLoading(false);\n  }, []);\n\n  // Функция для входа в систему\n  const login = async (email, password) => {\n    try {\n      console.log('Отправка запроса на авторизацию:', '/api/login');\n      console.log('Данные для входа:', { email });\n      \n      const { data } = await axios.post('/api/login', { email, password });\n      \n      console.log('Успешная авторизация, получен токен');\n      setUser(data);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data));\n      // Устанавливаем заголовок авторизации для всех запросов axios\n      axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n      console.log('Заголовок Authorization установлен:', `Bearer ${data.token}`);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Ошибка авторизации:', error);\n      \n      // Более подробное логирование ошибок\n      if (error.response) {\n        console.error('Ответ сервера:', error.response.status, error.response.data);\n      } else if (error.request) {\n        console.error('Запрос без ответа:', error.request);\n      } else {\n        console.error('Ошибка настройки запроса:', error.message);\n      }\n      \n      return {\n        success: false,\n        message: error.response?.data?.message || 'Ошибка входа. Проверьте соединение с сервером.'\n      };\n    }\n  };\n\n  // Функция для регистрации\n  const register = async (name, email, password) => {\n    try {\n      console.log('Отправка запроса на регистрацию:', '/api/register');\n      console.log('Данные для регистрации:', { name, email });\n      \n      const { data } = await axios.post('/api/register', { name, email, password });\n      \n      console.log('Успешная регистрация, получен токен');\n      setUser(data);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n      console.log('Заголовок Authorization установлен:', `Bearer ${data.token}`);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Ошибка регистрации:', error);\n      \n      // Более подробное логирование ошибок\n      if (error.response) {\n        console.error('Ответ сервера:', error.response.status, error.response.data);\n      } else if (error.request) {\n        console.error('Запрос без ответа:', error.request);\n      } else {\n        console.error('Ошибка настройки запроса:', error.message);\n      }\n      \n      return {\n        success: false,\n        message: error.response?.data?.message || 'Ошибка регистрации. Проверьте соединение с сервером.'\n      };\n    }\n  };\n\n  // Функция для выхода из системы\n  const logout = () => {\n    console.log('Выход из системы, удаление токена');\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n    console.log('Заголовок Authorization удален');\n  };\n\n  // Проверка, является ли пользователь администратором\n  const isAdmin = () => {\n    return user?.role === 'admin';\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, register, logout, isAdmin }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}