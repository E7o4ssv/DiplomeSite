{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/\\u0434\\u0438\\u043F\\u043B\\u043E\\u043C/client/src/context/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  // Загрузка корзины из локального хранилища при инициализации\n  useEffect(() => {\n    const storedCart = localStorage.getItem('cart');\n    if (storedCart) {\n      const parsedCart = JSON.parse(storedCart);\n      setCartItems(parsedCart);\n    }\n  }, []);\n\n  // Обновление общей суммы при изменении корзины\n  useEffect(() => {\n    const newTotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    setTotal(newTotal);\n\n    // Сохранение корзины в локальное хранилище\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Добавление товара в корзину\n  const addToCart = (product, quantity = 1) => {\n    setCartItems(prevItems => {\n      const existingItemIndex = prevItems.findIndex(item => item.id === product.id);\n      if (existingItemIndex >= 0) {\n        // Если товар уже есть в корзине, увеличиваем количество\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex] = {\n          ...updatedItems[existingItemIndex],\n          quantity: updatedItems[existingItemIndex].quantity + quantity\n        };\n        return updatedItems;\n      } else {\n        // Если товара нет в корзине, добавляем его\n        return [...prevItems, {\n          ...product,\n          quantity\n        }];\n      }\n    });\n  };\n\n  // Обновление количества товара в корзине\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // Удаление товара из корзины\n  const removeFromCart = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n\n  // Очистка корзины\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      total,\n      addToCart,\n      updateQuantity,\n      removeFromCart,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"VGcgatm6mOIveVCuSINueFjERHY=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","total","setTotal","storedCart","localStorage","getItem","parsedCart","JSON","parse","newTotal","reduce","sum","item","price","quantity","setItem","stringify","addToCart","product","prevItems","existingItemIndex","findIndex","id","updatedItems","updateQuantity","productId","removeFromCart","map","filter","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/диплом/client/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  // Загрузка корзины из локального хранилища при инициализации\n  useEffect(() => {\n    const storedCart = localStorage.getItem('cart');\n    if (storedCart) {\n      const parsedCart = JSON.parse(storedCart);\n      setCartItems(parsedCart);\n    }\n  }, []);\n\n  // Обновление общей суммы при изменении корзины\n  useEffect(() => {\n    const newTotal = cartItems.reduce(\n      (sum, item) => sum + item.price * item.quantity,\n      0\n    );\n    setTotal(newTotal);\n    \n    // Сохранение корзины в локальное хранилище\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Добавление товара в корзину\n  const addToCart = (product, quantity = 1) => {\n    setCartItems(prevItems => {\n      const existingItemIndex = prevItems.findIndex(\n        item => item.id === product.id\n      );\n\n      if (existingItemIndex >= 0) {\n        // Если товар уже есть в корзине, увеличиваем количество\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex] = {\n          ...updatedItems[existingItemIndex],\n          quantity: updatedItems[existingItemIndex].quantity + quantity\n        };\n        return updatedItems;\n      } else {\n        // Если товара нет в корзине, добавляем его\n        return [...prevItems, { ...product, quantity }];\n      }\n    });\n  };\n\n  // Обновление количества товара в корзине\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n\n    setCartItems(prevItems =>\n      prevItems.map(item =>\n        item.id === productId ? { ...item, quantity } : item\n      )\n    );\n  };\n\n  // Удаление товара из корзины\n  const removeFromCart = (productId) => {\n    setCartItems(prevItems =>\n      prevItems.filter(item => item.id !== productId)\n    );\n  };\n\n  // Очистка корзины\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cartItems,\n        total,\n        addToCart,\n        updateQuantity,\n        removeFromCart,\n        clearCart\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}