{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/\\u0434\\u0438\\u043F\\u043B\\u043E\\u043C/client/src/components/ConnectionStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionStatus = () => {\n  _s();\n  const [status, setStatus] = useState('checking');\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    // Функция для проверки статуса соединения\n    const checkStatus = async () => {\n      try {\n        await axios.get('/api/test/cors-check');\n        setStatus('connected');\n        // Скрываем индикатор через 3 секунды после успешного соединения\n        setTimeout(() => setIsVisible(false), 3000);\n      } catch (error) {\n        console.error('Ошибка соединения с сервером:', error);\n        setStatus('disconnected');\n        setIsVisible(true);\n      }\n    };\n\n    // Проверяем соединение при монтировании и каждые 30 секунд\n    checkStatus();\n    const interval = setInterval(checkStatus, 30000);\n\n    // Показываем индикатор\n    setIsVisible(true);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Если индикатор скрыт, не отображаем ничего\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fixed bottom-4 left-4 px-4 py-2 rounded-full shadow-lg flex items-center transition-all ${status === 'connected' ? 'bg-green-500 text-white' : status === 'disconnected' ? 'bg-red-500 text-white' : 'bg-yellow-500 text-white'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-block w-3 h-3 rounded-full mr-2 ${status === 'connected' ? 'bg-green-200' : status === 'disconnected' ? 'bg-red-200' : 'bg-yellow-200'} ${status === 'checking' ? 'animate-pulse' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-sm font-medium\",\n      children: [status === 'connected' && 'Соединение установлено', status === 'disconnected' && 'Ошибка соединения с сервером', status === 'checking' && 'Проверка соединения...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionStatus, \"NlNCblF15J4d7de3WJC+Y+R8lyE=\");\n_c = ConnectionStatus;\nexport default ConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"ConnectionStatus\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ConnectionStatus","_s","status","setStatus","isVisible","setIsVisible","checkStatus","get","setTimeout","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/диплом/client/src/components/ConnectionStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ConnectionStatus = () => {\n  const [status, setStatus] = useState('checking');\n  const [isVisible, setIsVisible] = useState(false);\n  \n  useEffect(() => {\n    // Функция для проверки статуса соединения\n    const checkStatus = async () => {\n      try {\n        await axios.get('/api/test/cors-check');\n        setStatus('connected');\n        // Скрываем индикатор через 3 секунды после успешного соединения\n        setTimeout(() => setIsVisible(false), 3000);\n      } catch (error) {\n        console.error('Ошибка соединения с сервером:', error);\n        setStatus('disconnected');\n        setIsVisible(true);\n      }\n    };\n    \n    // Проверяем соединение при монтировании и каждые 30 секунд\n    checkStatus();\n    const interval = setInterval(checkStatus, 30000);\n    \n    // Показываем индикатор\n    setIsVisible(true);\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  // Если индикатор скрыт, не отображаем ничего\n  if (!isVisible) return null;\n  \n  return (\n    <div \n      className={`fixed bottom-4 left-4 px-4 py-2 rounded-full shadow-lg flex items-center transition-all ${\n        status === 'connected' ? 'bg-green-500 text-white' : \n        status === 'disconnected' ? 'bg-red-500 text-white' : 'bg-yellow-500 text-white'\n      }`}\n    >\n      <span className={`inline-block w-3 h-3 rounded-full mr-2 ${\n        status === 'connected' ? 'bg-green-200' : \n        status === 'disconnected' ? 'bg-red-200' : 'bg-yellow-200'\n      } ${status === 'checking' ? 'animate-pulse' : ''}`}></span>\n      \n      <span className=\"text-sm font-medium\">\n        {status === 'connected' && 'Соединение установлено'}\n        {status === 'disconnected' && 'Ошибка соединения с сервером'}\n        {status === 'checking' && 'Проверка соединения...'}\n      </span>\n    </div>\n  );\n};\n\nexport default ConnectionStatus; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,UAAU,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMT,KAAK,CAACU,GAAG,CAAC,sBAAsB,CAAC;QACvCJ,SAAS,CAAC,WAAW,CAAC;QACtB;QACAK,UAAU,CAAC,MAAMH,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDN,SAAS,CAAC,cAAc,CAAC;QACzBE,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC;;IAED;IACAC,WAAW,CAAC,CAAC;IACb,MAAMK,QAAQ,GAAGC,WAAW,CAACN,WAAW,EAAE,KAAK,CAAC;;IAEhD;IACAD,YAAY,CAAC,IAAI,CAAC;IAElB,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACP,SAAS,EAAE,OAAO,IAAI;EAE3B,oBACEL,OAAA;IACEe,SAAS,EAAE,2FACTZ,MAAM,KAAK,WAAW,GAAG,yBAAyB,GAClDA,MAAM,KAAK,cAAc,GAAG,uBAAuB,GAAG,0BAA0B,EAC/E;IAAAa,QAAA,gBAEHhB,OAAA;MAAMe,SAAS,EAAE,0CACfZ,MAAM,KAAK,WAAW,GAAG,cAAc,GACvCA,MAAM,KAAK,cAAc,GAAG,YAAY,GAAG,eAAe,IACxDA,MAAM,KAAK,UAAU,GAAG,eAAe,GAAG,EAAE;IAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAE3DpB,OAAA;MAAMe,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GAClCb,MAAM,KAAK,WAAW,IAAI,wBAAwB,EAClDA,MAAM,KAAK,cAAc,IAAI,8BAA8B,EAC3DA,MAAM,KAAK,UAAU,IAAI,wBAAwB;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnDID,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AAqDtB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}